<<<<<<<< HEAD:server/migrations/versions/e5df64068e97_updates_models.py
"""updates models

Revision ID: e5df64068e97
Revises: 
Create Date: 2023-08-30 11:17:08.775614
========
"""Synced up to Nigel's work

Revision ID: 7df455296feb
Revises: 
Create Date: 2023-08-29 05:34:55.138515
>>>>>>>> a270d732b930b3168240970245541cb6edd8f92e:server/migrations/versions/7df455296feb_synced_up_to_nigel_s_work.py

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
<<<<<<<< HEAD:server/migrations/versions/e5df64068e97_updates_models.py
revision = 'e5df64068e97'
========
revision = '7df455296feb'
>>>>>>>> a270d732b930b3168240970245541cb6edd8f92e:server/migrations/versions/7df455296feb_synced_up_to_nigel_s_work.py
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sellers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_purchased', sa.Boolean(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('purchaser_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['purchaser_id'], ['users.id'], name=op.f('fk_items_purchaser_id_users')),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], name=op.f('fk_items_seller_id_sellers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auctions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('top_bid', sa.Integer(), nullable=True),
    sa.Column('top_bid_id', sa.Integer(), nullable=True),
    sa.Column('top_bidder', sa.String(), nullable=True),
    sa.Column('end_time', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_auctions_item_id_items')),
    sa.ForeignKeyConstraint(['top_bid_id'], ['users.id'], name=op.f('fk_auctions_top_bid_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_item_categories_category_id_categories')),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_item_categories_item_id_items')),
    sa.PrimaryKeyConstraint('category_id', 'item_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('item_categories')
    op.drop_table('auctions')
    op.drop_table('items')
    op.drop_table('users')
    op.drop_table('sellers')
    op.drop_table('categories')
    # ### end Alembic commands ###
